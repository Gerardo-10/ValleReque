from flask import Blueprint, render_template, current_app, request, jsonify, redirect, url_for, flash
from flask_login import login_required, current_user

from src.models.ModelEmpleado import ModelEmpleado
from src.models.ModelUser import ModelUser

empleado_routes = Blueprint('empleado_routes', __name__)

@empleado_routes.route('/seguridad')
@login_required
def seguridad():
    empleados = ModelEmpleado.get_all(current_app.db)
    return render_template('seguridad.html', empleados=empleados)

@empleado_routes.route('/perfil')
@login_required
def perfil():
    empleado = ModelEmpleado.get_by_empleado_id(current_app.db, current_user.id_usuario)
    rol, estado = ModelUser.obtener_rol_estado_usuario(current_app.db, current_user.id_usuario)
    return render_template('auth/perfil.html', empleado=empleado, rol=rol, estado=estado)

@empleado_routes.route('/detalle_empleado/<int:id_empleado>')
@login_required
def empleado(id_empleado):
    empleado = ModelEmpleado.get_by_empleado_id(current_app.db, id_empleado)
    return render_template('detalle_empleado.html', empleado=empleado)

@empleado_routes.route('/insertar_empleado', methods=['POST'])
@login_required
def insertar_empleado():
    try:
        if request.headers.get('X-Requested-With') == 'XMLHttpRequest':
            form = request.form
            data = {
                'area': form['area'],
                'nombre': form['nombre'],
                'apellido': form['apellido'],
                'dni': form['dni'],
                'direccion': form['direccion'],
                'telefono': form['telefono'],
                'correo': form['correo'],
                'fecha_nacimiento': form['fecha_nacimiento'],
                }

            success, message, empleado_insertado = ModelEmpleado.insert(current_app.db, data, data['area'])

            if success:
                return jsonify({
                    'success': True,
                    'message': message,
                    'empleado': empleado_insertado
                })
            else:
                return jsonify({'success': False, 'message': message}), 500
        else:
            flash('Esta ruta solo acepta peticiones AJAX', 'danger')
            return redirect(url_for('cliente_routes.clientes'))
    except Exception as e:
        return jsonify({'success': False, 'message': str(e)}), 500

