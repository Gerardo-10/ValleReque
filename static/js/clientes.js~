window.initClientesModals = function () {
    // Referencias a elementos del DOM
    const btnCambiarEstado = document.getElementById('btnCambiarEstado');
    const btnAgregar = document.getElementById('btnAgregar');

    const modalCambiarEstado = document.getElementById('modalCambiarEstado');
    const modalAgregarCliente = document.getElementById('modalAgregarCliente');
    const modalExito = document.getElementById('modalExito');
    const modalOverlay = document.getElementById('modalOverlay');

    const cerrarModalEstado = document.getElementById('cerrarModalEstado');
    const cerrarModalAgregar = document.getElementById('cerrarModalAgregar');
    const cerrarModalExito = document.getElementById('cerrarModalExito');

    const btnCancelarAgregar = document.getElementById('btnCancelarAgregar');
    const btnConfirmarEstado = document.getElementById('btnConfirmarEstado');

    const formAgregarCliente = document.getElementById('formAgregarCliente');
    const opcionesEstado = document.querySelectorAll('.opcion-estado');

    const checkboxSeleccionarTodos = document.getElementById('seleccionarTodos');
    const checkboxesClientes = document.querySelectorAll('.checkbox-cliente');

    // Variables de estado
    let clientesSeleccionados = [];
    let estadoSeleccionado = null;

    // Funciones para manejar modales
    function abrirModal(modal) {
        modal.classList.add('activo');
        modalOverlay.classList.add('activo');
        document.body.style.overflow = 'hidden';
    }

    function cerrarModal(modal) {
        modal.classList.remove('activo');
        modalOverlay.classList.remove('activo');
        document.body.style.overflow = '';
    }

    function cerrarTodosLosModales() {
        document.querySelectorAll('.modal').forEach(modal => {
            modal.classList.remove('activo');
        });
        modalOverlay.classList.remove('activo');
        document.body.style.overflow = '';
    }

    function mostrarExito(titulo, mensaje) {
        document.getElementById('tituloExito').textContent = titulo;
        document.getElementById('mensajeExito').textContent = mensaje;
        abrirModal(modalExito);
    }

    function actualizarClientesSeleccionados() {
        clientesSeleccionados = [];
        checkboxesClientes.forEach(checkbox => {
            if (checkbox.checked) {
                clientesSeleccionados.push(checkbox.dataset.id);
            }
        });

        btnCambiarEstado.disabled = clientesSeleccionados.length === 0;
        btnCambiarEstado.style.opacity = clientesSeleccionados.length === 0 ? '0.6' : '1';
    }

    checkboxesClientes.forEach(checkbox => {
        checkbox.addEventListener('change', actualizarClientesSeleccionados);
    });

    opcionesEstado.forEach(opcion => {
        opcion.addEventListener('click', function () {
            opcionesEstado.forEach(op => op.classList.remove('seleccionado'));
            this.classList.add('seleccionado');
            estadoSeleccionado = this.dataset.estado;
        });
    });

    const agregarCliente = async () => {
    const clienteData = {
        nombre: document.getElementById('nombreCliente').value,
        apellido: document.getElementById('apellidoCliente').value,
        dni: document.getElementById('dniCliente').value,
        direccion: document.getElementById('direccionCliente').value,
        correo: document.getElementById('correoElectronicoCliente').value,
        telefono: document.getElementById('telefonoCliente').value,
        ocupacion: document.getElementById('ocupacionCliente').value,
        ingreso_neto: parseFloat(document.getElementById('ingresoCliente').value),
        estado_cliente: document.getElementById('estadoCliente').value,
        carga_familiar: document.getElementById('cargaFamiliarCliente').checked ? 1 : 0,
    };

    try {
        const response = await fetch('/clientes/agregar', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(clienteData),
        });

        const data = await response.json();

        if (response.ok) {
            console.log('Cliente agregado correctamente:', data);
        } else {
            console.error('Error al agregar cliente:', data);
        }
    } catch (error) {
        console.error('Error de solicitud:', error);
    }
};


    function agregarFilaATabla(cliente) {
        const tbody = document.getElementById('tabla_clientes');
        const fila = document.createElement('tr');

        // Esto depende del estado exacto que devuelves. Aqu√≠ se asume texto plano.
        let estadoClase = {
            'activo': 'activo',
            'evaluado': 'evaluado',
            'finalizado': 'finalizado',
            'no-disponible': 'no-disponible',
            'sin-evaluar': 'sin-evaluar',
            'por-evaluar': 'por-evaluar'
        }[cliente.estado] || 'sin-evaluar';

        fila.innerHTML = `
        <td><input type="checkbox" class="checkbox-cliente" data-id="${cliente.id_cliente}"></td>
        <td>${cliente.id_cliente}</td>
        <td data-filtro="nombreCompleto">${cliente.nombre} ${cliente.apellido}</td>
        <td data-filtro="dni">${cliente.dni}</td>
        <td>${cliente.direccion}</td>
        <td>${cliente.telefono}</td>
        <td>${cliente.ingreso_neto}</td>
        <td>
            <span class="estado-badge ${estadoClase}">
                ${cliente.estado}
            </span>
        </td>
        <td style="text-align: center;">
            <button class="btn-detalles-clientes" data-id="nuevo"><i class="fas fa-eye"></i></button>
        </td>
    `;

        fila.setAttribute('data-estado', cliente.estado.toLowerCase());
        tbody.appendChild(fila);

        fila.querySelector('.checkbox-cliente').addEventListener('change', actualizarClientesSeleccionados);

    }

    function estadoClase(estado) {
        const clases = {
            activo: 'activo',
            evaluado: 'evaluado',
            finalizado: 'finalizado',
            'no-disponible': 'no-disponible',
            'sin-evaluar': 'sin-evaluar',
            'por-evaluar': 'por-evaluar'
        };
        return clases[estado.toLowerCase()] || 'sin-evaluar';
    }

    btnConfirmarEstado.addEventListener('click', function () {
        if (!estadoSeleccionado) {
            alert('Por favor, seleccione un estado');
            return;
        }

        cerrarModal(modalCambiarEstado);
        setTimeout(() => {
            mostrarExito('Estado Actualizado', `Se ha actualizado el estado de ${clientesSeleccionados.length} cliente(s).`);
        }, 500);

        estadoSeleccionado = null;
        opcionesEstado.forEach(op => op.classList.remove('seleccionado'));
    });

    btnCambiarEstado.addEventListener('click', () => {
        if (clientesSeleccionados.length === 0) {
            alert('Por favor, seleccione al menos un cliente');
            return;
        }
        abrirModal(modalCambiarEstado);
    });

    btnAgregar.addEventListener('click', () => abrirModal(modalAgregarCliente));
    cerrarModalEstado.addEventListener('click', () => cerrarModal(modalCambiarEstado));
    cerrarModalAgregar.addEventListener('click', () => cerrarModal(modalAgregarCliente));
    cerrarModalExito.addEventListener('click', () => cerrarModal(modalExito));
    btnCancelarAgregar.addEventListener('click', () => cerrarModal(modalAgregarCliente));
    modalOverlay.addEventListener('click', cerrarTodosLosModales);

    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            cerrarTodosLosModales();
        }
    });

    actualizarClientesSeleccionados();

    const inputBuscar = document.getElementById('buscarCliente');
    inputBuscar.addEventListener('input', filtrarClientes);
    document.getElementById('filtroClientes').addEventListener('change', filtrarClientes);
    document.getElementById('filtroClientesEstado').addEventListener('change', filtrarClientes);

    function filtrarClientes() {
        const textoBusqueda = inputBuscar.value.toLowerCase();
        const filtro = document.getElementById('filtroClientes').value;
        const filtroEstado = document.getElementById('filtroClientesEstado').value;
        const filas = document.querySelectorAll('.tabla-clientes tbody tr');

        filas.forEach(fila => {
            const estadoCliente = fila.getAttribute('data-estado');

            // Solo muestra filas que coincidan exactamente con el estado seleccionado
            const coincideEstado = estadoCliente === filtroEstado;

            if (!coincideEstado) {
                fila.style.display = 'none';
                return;
            }

            let mostrar = false;

            if (!filtro) {
                mostrar = fila.textContent.toLowerCase().includes(textoBusqueda);
            } else {
                const celda = fila.querySelector(`td[data-filtro="${filtro}"]`);
                if (celda) {
                    mostrar = celda.textContent.toLowerCase().includes(textoBusqueda);
                }
            }

            fila.style.display = mostrar ? '' : 'none';
        });
    }
}