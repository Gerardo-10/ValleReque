window.initClientesModals = function () {
    // Referencias a elementos del DOM
    const btnCambiarEstado = document.getElementById('btnCambiarEstado');
    const btnAgregar = document.getElementById('btnAgregar');

    const modalCambiarEstado = document.getElementById('modalCambiarEstado');
    const modalAgregarCliente = document.getElementById('modalAgregarCliente');
    const modalExito = document.getElementById('modalExito');
    const modalOverlay = document.getElementById('modalOverlay');

    const cerrarModalEstado = document.getElementById('cerrarModalEstado');
    const cerrarModalAgregar = document.getElementById('cerrarModalAgregar');
    const cerrarModalExito = document.getElementById('cerrarModalExito');

    const btnCancelarAgregar = document.getElementById('btnCancelarAgregar');
    const btnConfirmarEstado = document.getElementById('btnConfirmarEstado');

    const formAgregarCliente = document.getElementById('formAgregarCliente');
    const opcionesEstado = document.querySelectorAll('.opcion-estado');

    const checkboxSeleccionarTodos = document.getElementById('seleccionarTodos');
    const checkboxesClientes = document.querySelectorAll('.checkbox-cliente');

    // Variables de estado
    let clientesSeleccionados = [];
    let estadoSeleccionado = null;

    // Funciones para manejar modales
    function abrirModal(modal) {
        modal.classList.add('activo');
        modalOverlay.classList.add('activo');
        document.body.style.overflow = 'hidden';
    }

    function cerrarModal(modal) {
        modal.classList.remove('activo');
        modalOverlay.classList.remove('activo');
        document.body.style.overflow = '';
    }

    function cerrarTodosLosModales() {
        document.querySelectorAll('.modal').forEach(modal => {
            modal.classList.remove('activo');
        });
        modalOverlay.classList.remove('activo');
        document.body.style.overflow = '';
    }

    function mostrarExito(titulo, mensaje) {
        document.getElementById('tituloExito').textContent = titulo;
        document.getElementById('mensajeExito').textContent = mensaje;
        abrirModal(modalExito);
    }

    function actualizarClientesSeleccionados() {
        clientesSeleccionados = [];
        checkboxesClientes.forEach(checkbox => {
            if (checkbox.checked) {
                clientesSeleccionados.push(checkbox.dataset.id);
            }
        });

        btnCambiarEstado.disabled = clientesSeleccionados.length === 0;
        btnCambiarEstado.style.opacity = clientesSeleccionados.length === 0 ? '0.6' : '1';
    }

    checkboxesClientes.forEach(checkbox => {
        checkbox.addEventListener('change', actualizarClientesSeleccionados);
    });

    opcionesEstado.forEach(opcion => {
        opcion.addEventListener('click', function () {
            opcionesEstado.forEach(op => op.classList.remove('seleccionado'));
            this.classList.add('seleccionado');
            estadoSeleccionado = this.dataset.estado;
        });
    });

    formAgregarCliente.addEventListener('submit', function (e) {
        e.preventDefault();
        cerrarModal(modalAgregarCliente);
        setTimeout(() => {
            mostrarExito('Cliente Agregado Exitosamente', 'El nuevo cliente ha sido registrado en el sistema.');
        }, 500);
    });

    btnConfirmarEstado.addEventListener('click', function () {
        if (!estadoSeleccionado) {
            alert('Por favor, seleccione un estado');
            return;
        }

        cerrarModal(modalCambiarEstado);
        setTimeout(() => {
            mostrarExito('Estado Actualizado', `Se ha actualizado el estado de ${clientesSeleccionados.length} cliente(s).`);
        }, 500);

        estadoSeleccionado = null;
        opcionesEstado.forEach(op => op.classList.remove('seleccionado'));
    });

    btnCambiarEstado.addEventListener('click', () => {
        if (clientesSeleccionados.length === 0) {
            alert('Por favor, seleccione al menos un cliente');
            return;
        }
        abrirModal(modalCambiarEstado);
    });

    btnAgregar.addEventListener('click', () => abrirModal(modalAgregarCliente));
    cerrarModalEstado.addEventListener('click', () => cerrarModal(modalCambiarEstado));
    cerrarModalAgregar.addEventListener('click', () => cerrarModal(modalAgregarCliente));
    cerrarModalExito.addEventListener('click', () => cerrarModal(modalExito));
    btnCancelarAgregar.addEventListener('click', () => cerrarModal(modalAgregarCliente));
    modalOverlay.addEventListener('click', cerrarTodosLosModales);

    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            cerrarTodosLosModales();
        }
    });

    actualizarClientesSeleccionados();

    const inputBuscar = document.getElementById('buscarCliente');
    inputBuscar.addEventListener('input', filtrarClientes);
    document.getElementById('filtroClientes').addEventListener('change', filtrarClientes);
    document.getElementById('filtroClientesEstado').addEventListener('change', filtrarClientes);

    function filtrarClientes() {
        const textoBusqueda = inputBuscar.value.toLowerCase();
        const filtro = document.getElementById('filtroClientes').value;
        const filtroEstado = document.getElementById('filtroClientesEstado').value;
        const filas = document.querySelectorAll('.tabla-clientes tbody tr');

        filas.forEach(fila => {
            const estadoCliente = fila.getAttribute('data-estado');

            // Solo muestra filas que coincidan exactamente con el estado seleccionado
            const coincideEstado = estadoCliente === filtroEstado;

            if (!coincideEstado) {
                fila.style.display = 'none';
                return;
            }

            let mostrar = false;

            if (!filtro) {
                mostrar = fila.textContent.toLowerCase().includes(textoBusqueda);
            } else {
                const celda = fila.querySelector(`td[data-filtro="${filtro}"]`);
                if (celda) {
                    mostrar = celda.textContent.toLowerCase().includes(textoBusqueda);
                }
            }

            fila.style.display = mostrar ? '' : 'none';
        });
    }

    const botonesDetalles = document.querySelectorAll(".btn-detalles-clientes");

    botonesDetalles.forEach(boton => {
        boton.addEventListener("click", () => {
            const idCliente = boton.getAttribute("data-id");
            cargarVista(`/detalle_clientes/${idCliente}`, () => {
                console.log("Vista de detalle cargada");
                // Aquí podrías inicializar algo más si necesitas
            });
        });
    });
}