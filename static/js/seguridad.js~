window.initSecurityModals = function () {
    const btnCambiarEstado = document.getElementById('btnCambiarEstado');
    const btnAgregar = document.getElementById('btnAgregar');
    const modalCambiarEstado = document.getElementById('modalCambiarEstado');
    const modalAgregarEmpleado = document.getElementById('modalAgregarEmpleado');
    const modalExito = document.getElementById('modalExito');
    const modalOverlay = document.getElementById('modalOverlay');
    const cerrarModalEstado = document.getElementById('cerrarModalEstado');
    const cerrarModalAgregar = document.getElementById('cerrarModalAgregar');
    const cerrarModalExito = document.getElementById('cerrarModalExito');
    const btnCancelarAgregar = document.getElementById('btnCancelarAgregar');
    const btnConfirmarEstado = document.getElementById('btnConfirmarEstado');
    const formAgregarEmpleado = document.getElementById('formAgregarEmpleado');
    const opcionesEstado = document.querySelectorAll('.opcion-estado');
    const checkboxesEmpleados = document.querySelectorAll('.checkbox-empleado');

    let empleadosSeleccionados = [];
    let estadoSeleccionado = null;

    // === VALIDACIONES EN TIEMPO REAL ===
    document.getElementById('dniEmpleado').addEventListener('input', function () {
        this.value = this.value.replace(/\D/g, '').slice(0, 8);
    });

    document.getElementById('telefonoEmpleado').addEventListener('input', function () {
        this.value = this.value.replace(/\D/g, '').slice(0, 9);
    });

    function soloLetrasYEspacios(texto) {
        return texto.replace(/[^A-Za-zÁÉÍÓÚáéíóúÑñ ]/g, '');
    }

    document.getElementById('nombreEmpleado').addEventListener('input', function () {
        this.value = soloLetrasYEspacios(this.value);
    });

    document.getElementById('apellidoEmpleado').addEventListener('input', function () {
        this.value = soloLetrasYEspacios(this.value);
    });

    // === MODALES ===
    function abrirModal(modal) {
        modal.classList.add('activo');
        modalOverlay.classList.add('activo');
        document.body.style.overflow = 'hidden';
    }

    function cerrarModal(modal) {
        modal.classList.remove('activo');
        modalOverlay.classList.remove('activo');
        document.body.style.overflow = '';
    }

    function cerrarTodosLosModales() {
        document.querySelectorAll('.modal').forEach(modal => modal.classList.remove('activo'));
        modalOverlay.classList.remove('activo');
        document.body.style.overflow = '';
    }

    function mostrarExito(titulo, mensaje) {
        document.getElementById('tituloExito').textContent = titulo;
        document.getElementById('mensajeExito').textContent = mensaje;
        abrirModal(modalExito);
    }

    function actualizarEmpleadosSeleccionados() {
        empleadosSeleccionados = [];
        document.querySelectorAll('.checkbox-empleado').forEach(checkbox => {
            if (checkbox.checked) empleadosSeleccionados.push(checkbox.dataset.id);
        });
        btnCambiarEstado.disabled = empleadosSeleccionados.length === 0;
        btnCambiarEstado.style.opacity = empleadosSeleccionados.length === 0 ? '0.6' : '1';
    }

    document.addEventListener('change', actualizarEmpleadosSeleccionados);

    opcionesEstado.forEach(opcion => {
        opcion.addEventListener('click', function () {
            opcionesEstado.forEach(op => op.classList.remove('seleccionado'));
            this.classList.add('seleccionado');
            estadoSeleccionado = this.dataset.estado;
        });
    });

    // === FORMULARIO AGREGAR EMPLEADO ===
    formAgregarEmpleado.addEventListener('submit', function (e) {
        e.preventDefault();
        const nombre = this.nombre.value.trim();
        const apellido = this.apellido.value.trim();
        const dni = this.dni.value.trim();
        const direccion = this.direccion.value.trim();
        const telefono = this.telefono.value.trim();
        const correo = this.correo.value.trim();
        const fechaNacimiento = this.fecha_nacimiento.value;
        const area = this.area.value;

        if (!nombre || !apellido || !dni || !direccion || !telefono || !correo || !fechaNacimiento || !area) {
            Swal.fire({
                icon: 'warning',
                title: 'Formulario incompleto',
                text: 'Por favor, completa todos los campos obligatorios.'
            });
            return;
        }

        const correoRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!correoRegex.test(correo)) {
            Swal.fire({
                icon: 'error',
                title: 'Correo inválido',
                text: 'Por favor, ingresa un correo electrónico válido.'
            });
            return;
        }

        const formData = new FormData(this);
        const btnConfirmar = this.querySelector('button[type="submit"]');
        btnConfirmar.disabled = true;
        btnConfirmar.textContent = 'Procesando...';

        Swal.fire({
            title: 'Registrando...',
            text: 'Por favor espera',
            allowOutsideClick: false,
            didOpen: () => Swal.showLoading()
        });

        fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRFToken': document.querySelector('input[name=csrf_token]').value
            }
        })
            .then(async res => {
                const data = await res.json();
                if (!res.ok) throw new Error(data.message);
                return data;
            })
            .then(data => {
                Swal.close();
                btnConfirmar.disabled = false;
                btnConfirmar.textContent = 'Confirmar';

                if (data.success) {
                    const empleado = data.empleado;
                    const estadoTexto = empleado.estado === 1 ? 'Activo' : 'Inactivo';
                    const estadoClase = empleado.estado === 1 ? 'activo' : 'inactivo';
                    const estadoData = empleado.estado === 1 ? 'activos' : 'inactivos';

                    const nuevaFila = document.createElement('tr');
                    nuevaFila.setAttribute('data-estado', estadoData);
                    nuevaFila.innerHTML = `
                        <td><input type="checkbox" class="checkbox-empleado" data-id="${empleado.id_empleado}"></td>
                        <td>${empleado.id_empleado}</td>
                        <td data-filtro="nombre">${empleado.nombre}</td>
                        <td data-filtro="apellido">${empleado.apellido}</td>
                        <td data-filtro="dni">${empleado.dni}</td>
                        <td data-filtro="area">${empleado.area}</td>
                        <td><span class="estado-badge ${estadoClase}">${estadoTexto}</span></td>
                        <td style="text-align: center;"><button class="btn-detalles" data-id="${empleado.id_empleado}"><i class="fas fa-eye"></i></button></td>`;

                    document.getElementById('tabla_empleados_body').appendChild(nuevaFila);
                    cerrarModal(modalAgregarEmpleado);
                    mostrarExito('Empleado agregado', data.message);
                    this.reset();
                    paginarTabla();
                }
            })
            .catch(error => {
                Swal.close();
                btnConfirmar.disabled = false;
                btnConfirmar.textContent = 'Confirmar';

                const mensaje = error.message.toLowerCase();
                let mensajeUsuario;
                if (mensaje.includes("dni") && mensaje.includes("registrado")) mensajeUsuario = "El DNI ingresado ya está registrado.";
                else if (mensaje.includes("teléfono") && mensaje.includes("registrado")) mensajeUsuario = "El número de teléfono ya está registrado.";
                else if (mensaje.includes("correo") && mensaje.includes("registrado")) mensajeUsuario = "El correo electrónico ya se encuentra en uso.";
                else if (mensaje.includes("correo") && mensaje.includes("no parece ser válido")) mensajeUsuario = "El correo electrónico ingresado no existe o no es válido.";
                else if (mensaje.includes("nombre_usuario") && mensaje.includes("duplicate")) mensajeUsuario = "Ya existe un nombre de usuario generado con este nombre y apellido.";
                else mensajeUsuario = error.message;

                Swal.fire({
                    icon: 'error',
                    title: 'Error al registrar empleado',
                    text: mensajeUsuario,
                    confirmButtonText: 'Entendido',
                    confirmButtonColor: '#d33'
                });
            });
    });

    // === CAMBIAR ESTADO EMPLEADOS ===
    btnConfirmarEstado.addEventListener('click', function () {
        if (!estadoSeleccionado || empleadosSeleccionados.length === 0) {
            alert('Seleccione al menos un empleado y un estado.');
            return;
        }

        fetch('/cambiar_estado_empleados', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': document.querySelector('input[name=csrf_token]').value
            },
            body: JSON.stringify({ids: empleadosSeleccionados, estado: estadoSeleccionado})
        })
            .then(res => res.ok ? res.json() : Promise.reject(res.statusText))
            .then(data => {
                if (data.success) {
                    const cantidadEmpleados = empleadosSeleccionados.length;

                    empleadosSeleccionados.forEach(id => {
                        const fila = document.querySelector(`.checkbox-empleado[data-id="${id}"]`)?.closest('tr');
                        if (fila) {
                            const nuevoEstado = estadoSeleccionado === 'activo' ? 'Activo' : 'Inactivo';
                            const estadoClase = estadoSeleccionado === 'activo' ? 'activo' : 'inactivo';
                            const badge = fila.querySelector('.estado-badge');
                            badge.textContent = nuevoEstado;
                            badge.className = `estado-badge ${estadoClase}`;
                            fila.setAttribute('data-estado', estadoClase === 'activo' ? 'activos' : 'inactivos');
                        }
                    });

                    opcionesEstado.forEach(op => op.classList.remove('seleccionado'));
                    estadoSeleccionado = null;
                    document.querySelectorAll('.checkbox-empleado').forEach(cb => cb.checked = false);
                    empleadosSeleccionados = [];
                    cerrarModal(modalCambiarEstado);
                    mostrarExito('Estado Actualizado', `Se actualizó el estado de ${cantidadEmpleados} empleado(s).`);
                    actualizarEmpleadosSeleccionados();
                } else {
                    alert(data.message || 'Error al actualizar estado.');
                }
            })
            .catch(error => {
                alert('Error inesperado: ' + error);
            });
    });

    // === EVENTOS GENERALES ===
    btnCambiarEstado.addEventListener('click', () => {
        if (empleadosSeleccionados.length === 0) {
            alert('Por favor, seleccione al menos un empleado');
        } else {
            abrirModal(modalCambiarEstado);
        }
    });

    btnAgregar.addEventListener('click', () => abrirModal(modalAgregarEmpleado));
    cerrarModalEstado.addEventListener('click', () => cerrarModal(modalCambiarEstado));
    cerrarModalAgregar.addEventListener('click', () => cerrarModal(modalAgregarEmpleado));
    cerrarModalExito.addEventListener('click', () => cerrarModal(modalExito));
    btnCancelarAgregar.addEventListener('click', () => cerrarModal(modalAgregarEmpleado));
    modalOverlay.addEventListener('click', cerrarTodosLosModales);
    document.addEventListener('keydown', e => {
        if (e.key === 'Escape') cerrarTodosLosModales();
    });

    let filasPorPagina = 10, paginaActual = 1;

    function paginarTabla() {
        const filas = Array.from(document.querySelectorAll('#tabla_empleados_body tr')).filter(fila => fila.style.display !== 'none');
        const totalPaginas = Math.ceil(filas.length / filasPorPagina);
        const paginacion = document.getElementById('paginacion');

        function mostrarPagina(pagina) {
            paginaActual = pagina;
            const inicio = (pagina - 1) * filasPorPagina;
            const fin = inicio + filasPorPagina;

            document.querySelectorAll('#tabla_empleados_body tr').forEach(fila => fila.style.display = 'none');
            filas.slice(inicio, fin).forEach(fila => fila.style.display = '');
            paginacion.innerHTML = '';
            for (let i = 1; i <= totalPaginas; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                if (i === pagina) btn.classList.add('activo');
                btn.addEventListener('click', () => mostrarPagina(i));
                paginacion.appendChild(btn);
            }
        }

        if (totalPaginas > 0) mostrarPagina(paginaActual);
        else paginacion.innerHTML = '';
    }

    document.getElementById('buscarEmpleado').addEventListener('input', filtrarEmpleados);
    document.getElementById('filtroEmpleados').addEventListener('change', filtrarEmpleados);
    document.getElementById('filtroEmpleadosEstado').addEventListener('change', filtrarEmpleados);

// === FILTROS Y PAGINACIÓN ===
    function filtrarEmpleados() {
        const textoBusqueda = document.getElementById('buscarEmpleado').value.toLowerCase();
        const filtro = document.getElementById('filtroEmpleados').value;
        const filtroEstado = document.getElementById('filtroEmpleadosEstado').value;
        const filas = document.querySelectorAll('.tabla-empleados tbody tr');
        filas.forEach(fila => {
            const estadoEmpleado = fila.getAttribute('data-estado'); // activos o inactivos
            const coincideEstado = (filtroEstado === 'todos' || filtroEstado === '') || (estadoEmpleado === filtroEstado);
            if (!coincideEstado) {
                fila.style.display = 'none';
                return;
            }
            let mostrar = false;
            if (!filtro) {
                mostrar = fila.textContent.toLowerCase().includes(textoBusqueda);
            } else {
                const celda = fila.querySelector(`td[data-filtro="${filtro}"]`);
                if (celda) {
                    mostrar = celda.textContent.toLowerCase().includes(textoBusqueda);
                }
            }
            fila.style.display = mostrar ? '' : 'none';
        });
        paginarTabla(); // Siempre actualizar la paginación después del filtro
    }

    actualizarEmpleadosSeleccionados();
    paginarTabla();
};
